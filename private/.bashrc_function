#!/usr/bin/env bash

# git checkout
function gitc(){
    local branch=$1

    if [ -z ${branch} ]; then
        echo '缺少分支名称参数'
    else
        autoGitCheckOut ${branch}
    fi
}

function apt-search(){

    if [ -z $1 ]; then
        echo '请输入 apt-cache 搜索关键字'
    else
        sudo apt-cache search $1
    fi


}

# 自动更新
function autoGitCheckOut(){
    local branch=$1

    if [[ $PWD =~ 'yunkerefactor' ]]; then

        git checkout master \
        && git pull \
        && git checkout ${branch}

        #cd ../yunke-public
        #git checkout master
        #git pull
        #git checkout ${branch}

        #cd ../frontend
        #git checkout master
        #git pull
        #git checkout ${branch}
        #sudo npm run build  -- qmyx
        #sudo npm run build  -- datav
        #sudo npm run build  -- mysoft_back

        cd ../yunkerefactor



    elif [[ $PWD =~ 'frontend' ]]; then
        echo ''
    fi

}

DAILI_INDEX=1
function daili(){
    proxy_1=http://10.5.23.90:8888
    proxy_2=http://127.0.0.1:43889

    #echo "原代理服务器：$http_proxy"

    if [ $DAILI_INDEX -eq 0 ]; then
        http_proxy=''
        DAILI_INDEX=$((DAILI_INDEX+1))
    elif [ $DAILI_INDEX -eq 1 ]; then
        http_proxy=$proxy_1
        DAILI_INDEX=$((DAILI_INDEX+1))
    else
        http_proxy=$proxy_2
        DAILI_INDEX=0
    fi

    echo "当前代理服务器：$http_proxy"
    export http_proxy=$http_proxy && export https_proxy=$http_proxy
}

function env_init(){
    sudo apt-get install -y \
        vim \
        git \
        libgearman-dev \
        libmemcached-dev \
        libmcrypt-dev \
        libfreetype6-dev \
        libpng12-dev \
        libmagickwand-dev \
        libmagickcore-dev \
        build-essential \
        binutils-doc \
        software-properties-common \
        libboost-all-dev \
        gperf \
        libevent-dev \
        uuid-dev \
        wget \
        libsqlite3-dev \
        libpq-dev \
        gedit-plugins \
        zsh \
        fonts-powerline \
        openssh-client \
        openssh-server \
        calibre \
        python3-pip \
        libgcrypt20-dev


        pip3 install numpy
        pip3 install scipy
        pip3 install matplotlib

        # curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
        # sudo apt-get install -y nodejs
}

function start_xmr(){
    stop_xmr
    cd ~/developments/github/xmr-stak-cpu/ && nohup ./bin/xmr-stak-cpu &
}

function stop_xmr(){
    local PROCESS_COUNT=`ps -ef | grep 'xmr-stak-cpu' | grep -v 'grep' | wc -l`
    echo ${PROCESS_COUNT}
    if [ ${PROCESS_COUNT} -gt 0 ]; then
        ps -ef | grep 'xmr-stak-cpu' | grep -v 'grep' | awk '{print $2}' | xargs kill -9
    fi
}